<!DOCTYPE html>
<html lang="en">
<head>
<% include ../partials/head %>
</head>
<body>
    <header>
        <% include ../partials/header %>
    </header>
    <main class="main wrap">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <h1><%-title%></h1>
                </div>
            </div><!-- /.row -->
            <div class="row chart-container">
                <svg class="svg-chart" width="960" height="500">
                <!-- placeholder for the chart -->
                </svg>
            </div><!-- /.row -->
            <div class="row">
                <div class="col-lg-12">
                    <table class="table">
                      <tr>
                        <th>Date</th>
                        <th>BTC</th>
                        <th>DRL</th>
                        <th>LTC</th>
                      </tr>
                    <% minings.forEach(function(mining) { %>
                       <tr>
                         <td><%= mining.Date %></td>
                         <td><%= mining.BTC %></td>
                         <td><%= mining.DRK %></td>
                         <td><%= mining.LTC %></td>
                       </tr>
                    <% }); %>
                    </table>
                </div>
            </div><!-- /.row -->
        </div><!-- /.container -->
    </main>
    <footer>
        <% include ../partials/footer %>
    </footer>
    <script type="text/javascript">
    // Convert the bitcoins data to the data we can use in DS.js
    var data = <%- JSON.stringify(minings) %>;

    var svg = d3.select('svg'),
        margin = {
            top: 20,
            right: 50,
            bottom: 100,
            left: 50
        },
        width = +svg.attr('width') - margin.left - margin.right,
        height = +svg.attr('height') - margin.top - margin.bottom,
        g = svg.append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');
    // Graph title
    g.append('text')
        .attr('x', (width / 2))
        .attr('y', 0 - (margin.top / 3))
        .attr('text-anchor', 'middle')
        .style('font-size', '16px')
        .text('Mining chart');
    // Function to convert a string into a time
    var parseTime = d3.time.format('%Y-%m-%dT%H:%M:%S.%LZ').parse;
    // Function to show specific time format
    var formatTime = d3.time.format('%e %B');
    var tip = d3.tip()
        .attr('class', 'd3-tip')
        .offset([-10, 0])
        .html(function(d) {
            return "<span style='color:red'>" + d.worth + " </span> <strong>" + d.currency + "</strong>";
        })
    svg.call(tip);
    var color = d3.scale.category10();

    color.domain(d3.keys(data[0]).filter(function(key) {
        return key !== "Date" && key !== "_id";
    }));
    // Correct the types
    data.forEach(function(d) {
        d.date = parseTime(d.Date);
    });
    var rewards = color.domain().map(function(name) {
        return {
            name: name,
            values: data.map(function(d) {
                return {
                    date: d.date,
                    worth: +d[name],
                    currency: name
                };
            })
        };
    });
    var num_bars = d3.keys(rewards).length;
    var num_days = data.length;
    var y = d3.scale.linear().range([height, 0]);

    y.domain([
        0,
        d3.max(rewards, function(c) {
            return d3.max(c.values, function(v) {
                return v.worth;
            });
        })
    ]);
    var x0 = d3.scale.ordinal()
        .domain(d3.range(num_days))
        .rangeBands([0, width], .2);
    var x1 = d3.scale.ordinal()
        .domain(d3.range(num_bars))
        .rangeBands([0, x0.rangeBand()]);
    var color = d3.scale.category10();
    var xAxis = d3.svg.axis()
        .scale(x0)
        .tickFormat(function(d) {
            return formatTime(parseTime(data[d].Date));
        })
        .orient("bottom");
    var yAxis = d3.svg.axis()
        .scale(y)
        .orient("left");
    g.append("g")
        .attr("class", "y axis")
        .call(yAxis)
        .append("text")
        .attr("transform", "rotate(-90)")
        .attr("y", 6)
        .attr("dy", ".71em")
        .style("text-anchor", "end")
        .text("Amount");
    g.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis)
        .selectAll("text")
        .style("text-anchor", "end")
        .attr("dx", "-.8em")
        .attr("dy", ".15em")
        .attr("transform", function(d) {
            return "rotate(-90)"
        });
    // Add the bars
    g.append("g").selectAll(".bar")
        .data(rewards)
        .enter().append("g")
        .style("fill", function(d, i) {
            return color(i);
        })
        .attr("transform", function(d, i) {
            return "translate(" + x1(i) + ",0)";
        })
        .selectAll("rect")
        .data(function(d) {
            return d.values;
        })
        .enter().append("rect")
        .attr("class", "bar")
        .attr("width", x1.rangeBand())
        .attr("height", function(d) {
            return height - y(d.worth);
        })
        .attr("x", function(d, i) {
            return x0(i);
        })
        .attr("y", function(d) {
            return y(d.worth);
        })
        .on('mouseover', tip.show)
        .on('mouseout', tip.hide);
    var legend = g.append("g")
        .attr("font-family", "sans-serif")
        .attr("font-size", 10)
        .attr("text-anchor", "end")
        .selectAll("g")
        .data(rewards)
        .enter().append("g")
        .attr("transform", function(d, i) {
            return "translate(0," + i * 20 + ")";
        });
    legend.append("rect")
        .attr("x", width - 19)
        .attr("width", 19)
        .attr("height", 19)
        .attr("fill", function(d, i) {
            return color(i);
        })
    legend.append("text")
        .attr("x", width - 24)
        .attr("y", 9.5)
        .attr("dy", "0.32em")
        .text(function(d) {
            return d.name;
        });
    </script>
</body>
</html>